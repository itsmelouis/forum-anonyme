name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'pnpm'
      - name: Install pnpm
        run: npm install -g pnpm
      - name: Install dependencies
        run: pnpm install
      - name: Lint
        run: pnpm lint
      - name: Format check
        run: pnpm format:check

  test:
    needs: validate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'pnpm'
      - name: Install pnpm
        run: npm install -g pnpm
      - name: Install dependencies
        run: pnpm install
      - name: Run tests
        run: pnpm test

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata
        id: meta
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - name: Build and push API image
        uses: docker/build-push-action@v4
        with:
          context: ./apps/api
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/api:latest
            ghcr.io/${{ github.repository }}/api:${{ steps.meta.outputs.sha_short }}
      - name: Build and push Thread image
        uses: docker/build-push-action@v4
        with:
          context: ./apps/thread
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/thread:latest
            ghcr.io/${{ github.repository }}/thread:${{ steps.meta.outputs.sha_short }}
      - name: Build and push Sender image
        uses: docker/build-push-action@v4
        with:
          context: ./apps/sender
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/sender:latest
            ghcr.io/${{ github.repository }}/sender:${{ steps.meta.outputs.sha_short }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Update docker-compose.yml with image tags
        run: |
          sed -i 's|build: ./apps/api|image: ghcr.io/${{ github.repository }}/api:${{ steps.meta.outputs.sha_short }}|g' docker-compose.yml
          sed -i 's|build: ./apps/thread|image: ghcr.io/${{ github.repository }}/thread:${{ steps.meta.outputs.sha_short }}|g' docker-compose.yml
          sed -i 's|build: ./apps/sender|image: ghcr.io/${{ github.repository }}/sender:${{ steps.meta.outputs.sha_short }}|g' docker-compose.yml
      - name: Save docker-compose.yml as artifact
        uses: actions/upload-artifact@v3
        with:
          name: docker-compose
          path: docker-compose.yml
